# module_5_4.py Домашняя работа по уроку "Различие атрибутов класса и экземпляра."
# Cтоит задача понять разницу между атрибутами объекта и класса, дополнив уже
# существующий класс. Начнём с создания класса House:
class House:
    houses_history = []
# Этот атрибут будет хранить названия созданных объектов.
# В задаче ставится условие, применить метод __new__.
# Так как метод __new__ вызывается перед тем, как вызовется метод __init__, то пишем следующее:
    def __new__(cls, *args, **kwargs):
        cls.houses_history.append(args[0])
        return object.__new__(cls)
# Тут метод __new__ принимает указатель cls в качестве первого параметра и указывает на
# class House с атрибутами houses_history = []. Далее по условию задачи он возвращает объект
# return object.__new__(cls).
# Вписывать новое здание в историю будем сразу при создании объекта следующим образом
# " cls.houses_history.append(args[0])
# Теперь прописываем __init__ с параметрами
    def __init__(self, name, number_of_floor):
        self.name = name
        self.number_of_floor = number_of_floor
# Тут все понятно.
# Для удаления объектов будем использовать метод __del__(self).
# Переопределяем метод __del__(self) прописывая строку "снесён но он останется в истории"
    def __del__(self):
        print(f'{self.name} снесён, но он останется в истории')
# Теперь пробуем.....
# По условию задачи создаём несколько объектов класса House и проверяем работу
# методов __del__ и __new__, а также значение атрибута houses_history.
# Название строения берём из args.
h1 = House('ЖК Эльбрус', 10)
print(House.houses_history)
h2 = House('ЖК Акация', 20)
print(House.houses_history)
h3 = House('ЖК Матрёшки', 20)
print(House.houses_history)
# Проверяем удаление объектов
del h2
del h3
# Проверяем значение атрибута houses_history
print(House.houses_history)
